plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'


	// Apache poi
	implementation 'org.apache.poi:poi:5.2.5'
	implementation 'org.apache.poi:poi-ooxml:5.2.5'

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

	implementation "com.querydsl:querydsl-core"
	implementation "com.querydsl:querydsl-collections"

	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	// java.lang.NoClassDefFoundError (javax.annotation.Generated) 에러 대응 코드
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Spring Security
//	implementation 'org.springframework.boot:spring-boot-starter-security'

	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
}

def generated = 'src/main/generated'
tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
	main.java.srcDirs += [generated]
}

clean {
	delete file(generated)
}

tasks.named('test') {
	useJUnitPlatform()
}
